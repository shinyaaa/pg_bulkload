name: Build and Release RPMs for RHEL with PostgreSQL

on:
  push:
    tags:
      - 'VERSION*'

jobs:
  build_rpms:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        RHEL_VERSION: ["8", "9"]
        PG_VERSION: ["12", "13", "14", "15", "16"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Buildx
      uses: docker/setup-buildx-action@v2

    - name: Extract tag name
      run: echo ${GITHUB_REF_NAME}

    - name: hoge
      run: ls -Al

    - name: Build RPM in with PostgreSQL ${{ matrix.PG_VERSION }}
      run: |
        export PG_BULKLOAD_VERSION=$(echo "${GITHUB_REF_NAME#VERSION}" | sed 's/_/./g')
        docker build \
          --build-arg RHEL_VERSION=${{ matrix.RHEL_VERSION }} \
          --build-arg PG_VERSION=${{ matrix.PG_VERSION }} \
          --build-arg PG_BULKLOAD_VERSION=${PG_BULKLOAD_VERSION} \
          -t pg_bulkload:${{ matrix.PG_VERSION }}-${PG_BULKLOAD_VERSION}-${BUILD_VERSION}-el${{ matrix.RHEL_VERSION }} \
          -f .github/workflows/Dockerfile
        container_id=$(docker create pg_bulkload:${{ matrix.PG_VERSION }}-${PG_BULKLOAD_VERSION}-${BUILD_VERSION}-el${{ matrix.RHEL_VERSION }})
        docker cp $container_id:/var/lib/pgsql/rpmbuild/RPMS/x86_64 ./RPMS-${{ matrix.RHEL_VERSION }}-pg${{ matrix.PG_VERSION }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${GITHUB_REF_NAME}
        release_name: Release ${GITHUB_REF_NAME}
        draft: true
        prerelease: false

    - name: Upload RPM
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./RPMS-${{ matrix.image }}-pg${{ matrix.PG_VERSION }}/**/*.rpm
        asset_name: ${{ matrix.image }}-pg${{ matrix.PG_VERSION }}-application.rpm
        asset_content_type: application/x-rpm
